// ==========================================================================
// RESPONSIVE BREAKPOINT MANAGER
// ==========================================================================
// This is a mobile-first mixin. It applies styles from a given breakpoint and up.
// Example: @include breakpoint-up(md) { ...styles for medium screens and larger... }
@mixin breakpoint-up($breakpoint) {
    // Check if the breakpoint exists in the map
    @if map-has-key(vars.$breakpoints, $breakpoint) {
        // Get the width value from the map
        $width: map-get(vars.$breakpoints, $breakpoint);
        @media (min-width: $width) {
            @content;
        }
    } @else {
        // Log a warning if the breakpoint name is invalid
        @warn "Breakpoint `#{$breakpoint}` not found in $breakpoints map. Available breakpoints: #{map-keys(vars.$breakpoints)}";
    }
}

// ==========================================================================
// FLEXBOX HELPERS
// ==========================================================================
@mixin flexbox(
    $display: flex,
    $direction: null,
    $wrap: null,
    $justify-content: null,
    $align-items: null,
    $align-content: null,
    $gap: null
) {
    display: $display;

    @if $direction {
        flex-direction: $direction;
    }
    @if $wrap {
        flex-wrap: $wrap;
    }
    @if $justify-content {
        justify-content: $justify-content;
    }
    @if $align-items {
        align-items: $align-items;
    }
    @if $align-content {
        align-content: $align-content;
    }
    @if $gap {
        gap: $gap;
    }
}

@mixin flex-column($gap: null) {
    @include flexbox(
        $display: flex,
        $direction: column,
        $gap: $gap
    );
}

@mixin flex-center($direction: row, $gap: null) {
    @include flexbox(
        $display: flex,
        $direction: $direction,
        $justify-content: center,
        $align-items: center,
        $gap: $gap
    );
}

@mixin flex-start-center($direction: row, $gap: null) {
    @include flexbox(
        $display: flex,
        $direction: $direction,
        $justify-content: flex-start,
        $align-items: center,
        $gap: $gap
    );
}

@mixin flex-end-center($direction: row, $gap: null) {
    @include flexbox(
        $display: flex,
        $direction: $direction,
        $justify-content: flex-end,
        $align-items: center,
        $gap: $gap
    );
}

@mixin flex-center-start($direction: row, $gap: null) {
    @include flexbox(
        $display: flex,
        $direction: $direction,
        $justify-content: center,
        $align-items: flex-start,
        $gap: $gap
    );
}

@mixin flex-between-center($direction: row, $gap: null) {
    @include flexbox(
        $display: flex,
        $direction: $direction,
        $justify-content: space-between,
        $align-items: center,
        $gap: $gap
    );
}

@mixin flex-between-start($direction: row, $gap: null) {
    @include flexbox(
        $display: flex,
        $direction: $direction,
        $justify-content: space-between,
        $align-items: flex-start,
        $gap: $gap
    );
}